Go Soft memory limit
SetMemoryLimit は、ランタイムにソフトメモリ制限を提供する。

ランタイムは、ガベージコレクションの頻度を調整したり、より積極的にメモリーを基礎システムに戻したりして、このメモリー制限を守ろうとするいくつかの処理を行う。この制限は、GOGC=offの場合（またはSetGCPercent(-1)が実行された場合）でも尊重される。

入力制限はバイトで提供され、マップされ、管理され、Go ランタイムによって解放されないすべてのメモリが含まれます。注目すべきは、Go バイナリによって使用されるスペースと、プロセスの代わりに基本システムによって管理されるメモリや、同じプロセス内の非 Go コードによって管理されるメモリなど、Go の外部のメモリは考慮されないことです。除外されるメモリ ソースの例には、以下のものがあります。プロセスに代わって保持される OS カーネル メモリ、C コードによって割り当てられたメモリ、および syscall.Mmap によってマップされたメモリ (Go ランタイムによって管理されていないため) です。

より具体的には、以下の式は、ランタイムが制限値として維持しようとする値を正確に反映する。

runtime.MemStats.Sys - runtime.MemStats.HeapReleased

または、runtime/metricsパッケージの観点で。

/メモリ/クラス/合計:バイト - /メモリ/クラス/ヒープ/リリース:バイト

ゼロ制限または Go ランタイムが使用するメモリ量より低い制限は、ガベージコレクタがほぼ継続的に実行される可能性があります。しかし、アプリケーションはまだ進行している可能性があります。

メモリの制限は Go ランタイムによって常に尊重されるので、この動作を効果的に無効にするには、制限を非常に高く設定します。制限を無効にする標準的な値は math.MaxInt64 ですが、基本システムで利用できるメモリよりはるかに大きな値でも同様に機能します。

ソフトメモリ制限の詳細と、さまざまな一般的な使用例やシナリオを説明した詳細なガイドについては、https://go.dev/doc/gc-guide を参照してください。

環境変数 GOMEMLIMIT が設定されていない場合、初期設定は math.MaxInt64 です。GOMEMLIMIT は、バイト単位の数値で、オプションで単位の接尾辞をつけることができます。サポートされているサフィックスは，B，KiB，MiB，GiB，およびTiBである。これらのサフィックスは、IEC 80000-13 規格で定義されたバイト量を表す。つまり、2の累乗をベースにしています。KiBは2^10バイト、MiBは2^20バイト、といった具合です。

SetMemoryLimit は、以前に設定されたメモリ制限を返します。
負の入力は、制限を調整せず、次のことを可能にする。現在設定されているメモリ制限値を取得することができます。
